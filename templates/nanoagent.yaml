apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: spyderbat-nanoagent
  namespace: {{ .Release.Namespace }}
  
  labels:
    k8s-app: spyderbat-nanoagent
    version: v1
spec:
  selector:
    matchLabels:
      name: spyderbat-nanoagent
  template:
    metadata:
      labels:
        name: spyderbat-nanoagent
        k8s-app: spyderbat-nanoagent
        version: v1
{{- with .Values.podLabels }}
{{ toYaml . | indent 9 }}
{{- end }}
{{- if .Values.nanoagent.pod.annotations }}
      annotations:
{{ toYaml .Values.nanoagent.pod.annotations | indent 8 }}
{{- end }}
    spec:
      hostPID: true
      hostNetwork: true
{{- if .Values.nanoagent.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nanoagent.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.nanoagent.tolerations }}
      tolerations:
{{ toYaml .Values.nanoagent.tolerations | indent 8 }}
{{- end }}
{{- if .Values.nanoagent.affinity }}
      affinity:
{{ toYaml .Values.nanoagent.affinity | indent 8 }}
{{- end }}
{{- if .Values.priorityClassDefault.enabled }}
      priorityClassName: spyderbat-high-priority
{{- end }}
      containers:
        - name: spyderbat-nanoagent
          image: {{ .Values.image.registry}}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullpolicy }}
          env:
            - name: AGENT_REGISTRATION_CODE
              value: {{ .Values.nanoagent.agentRegistrationCode  }}
            - name: ORC_URL
              value: {{  .Values.nanoagent.orcurl }}
            - name: http_proxy
              value: {{  .Values.nanoagent.httpproxy }}
            - name: https_proxy
              value: {{ .Values.nanoagent.httpsproxy }}
            - name: HTTP_PROXY
              value: {{ .Values.nanoagent.httpproxy }}
            - name: HTTPS_PROXY
              value: {{ .Values.nanoagent.httpsproxy }}
            - name:  SPYDERBAT_TAGS
              value: {{ .Values.spyderbat_tags }}
{{- if .Values.OMITENVIRONMENT }}
            - name: OMITENVIRONMENT
              value: "{{ .Values.OMITENVIRONMENT }}"
{{- end }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}              
          securityContext:
{{- if .Values.spyderbat_permissions.USE_CAP_SYS_ADMIN }}
            capabilities:
              add: ["SYS_ADMIN"]
{{- end }}
{{- if .Values.spyderbat_permissions.USE_PRIVILEGED }}
            privileged: true
{{- end }}
          volumeMounts:
            - name: iproc
              mountPath: /iproc
              readOnly: true
            - name: hostopt
              mountPath: /hostopt
            - name: hostvar
              mountPath: /hostvar
            - name: hosthome
              mountPath: /hosthome
            - name: hostetc
              mountPath: /hostetc
              readOnly: true
            - name: hostrun
              mountPath: /hostrun
{{- if .Values.microK8sSnap.enabled }}
            - name: hostsnap
              mountPath: /hostsnap
{{- end }}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: hostopt
          hostPath:
            path: /opt
        - name: hostvar
          hostPath:
            path: /var
        - name: hosthome
          hostPath:
            path: /home
        - name: iproc
          hostPath:
            path: /proc
        - name: hostetc
          hostPath:
            path: /etc
        - name: hostrun
          hostPath:
            path: /var/run
{{- if .Values.microK8sSnap.enabled }}
        - name: hostsnap
          hostPath:
            path: /snap
{{- end }}
