{{- if .Values.clusterMonitor.create -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermonitor-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app: clustermonitor
    {{- include "spyderbat.version" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clustermonitor
  template:
    metadata:      
      name: clustermonitor
      namespace: {{ .Release.Namespace }}
      labels:
        app: clustermonitor
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
{{- if .Values.priorityClassDefault.enabled }}
      priorityClassName: spyderbat-high-priority
{{- end }}
      containers:
        - name: clustermonitor
          image: {{ .Values.image.registry}}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullpolicy }}
{{- if .Values.aws.secretsmanager.enabled }}
          command: ["/bin/bash","-c"]
          args: ["AGENT_REGISTRATION_CODE=`cat /mnt/spyderbat-credentials/spyderbat-registration-key` ./boot_strap.sh"]
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/spyderbat-credentials"
              readOnly: true
{{- end }}
          env:
{{- if eq .Values.aws.secretsmanager.enabled false }}
            - name: AGENT_REGISTRATION_CODE
              value: {{ .Values.nanoagent.agentRegistrationCode  }}
{{- end }}
            - name: ORC_URL
              value: {{  .Values.nanoagent.orcurl }}
            - name: http_proxy
              value: {{  .Values.nanoagent.httpproxy }}
            - name: https_proxy
              value: {{ .Values.nanoagent.httpsproxy }}
            - name: HTTP_PROXY
              value: {{ .Values.nanoagent.httpproxy }}
            - name: HTTPS_PROXY
              value: {{ .Values.nanoagent.httpsproxy }}
            - name:  SPYDERBAT_TAGS
              value: {{ .Values.spyderbat_tags }}
            - name: K8SMONITOR
              value: "yes"
            - name: SPYDERBAT_K8S_DEPLOYMENT
              value: "yes"
            - name: CLUSTER_NAME
              value: {{ .Values.CLUSTER_NAME }}
            - name: SPYDERBAT_INSTALL_ID
              valueFrom:
                 configMapKeyRef:
                    name: spyderbat-install-config
                    key: installdetails
{{- include "spyderbatenv.version" . | nindent 12 }}              
{{- if .Values.OMITENVIRONMENT }}
            - name: OMITENVIRONMENT
              value: "{{ .Values.OMITENVIRONMENT }}"
{{- end }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}        
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
{{- if .Values.aws.secretsmanager.enabled }}
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "spyderbat-credentials"
{{- end }}
{{- end }}
